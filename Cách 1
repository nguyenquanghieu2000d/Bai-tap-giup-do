/* Đây là cách 1, các này như cách mà cô bảo mọi người làm, không áp dụng triệt để tính đa hình trong này 
Ai có thắc mắc gì liên hệ mình nhé
*/

#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;
class DaGiac{
	protected:
	int soCanh;
	float doDaiCanh[100];
	public:
	DaGiac();
	DaGiac(int, float[100]);
	~DaGiac();
	friend istream& operator >> (istream&,DaGiac&);
	friend ostream& operator << (ostream&,DaGiac);
	float chuVi();
	virtual float dienTich();
	template <class T> bool operator > (T);
};

DaGiac::DaGiac(){
	this->soCanh = 0;
}

DaGiac::DaGiac(int sC, float dDC[100]){
	this->soCanh = sC;
	for(int i=0;i<soCanh;i++){
		this->doDaiCanh[i] = dDC[i];
	}
}

DaGiac::~DaGiac(){
}

istream& operator >> (istream& cin, DaGiac& A){
	cout << "Nhap so canh: "; cin >> A.soCanh;
	for(int i=0;i<A.soCanh;i++){
		cout << "Nhap canh " << i+1 << ": ";
		cin >> A.doDaiCanh[i];
	}
}

ostream& operator << (ostream& cout,DaGiac A){
	cout << "So canh: " << A.soCanh;
	cout << endl;
	cout << "Do dai canh: ";
	for(int i=0;i<A.soCanh;i++){
		cout << A.doDaiCanh[i] << " ";
	}
	cout << endl;
}

float DaGiac::chuVi(){
	float tong = 0;
	int count = 0;
	for(int i=0;i<soCanh;i++){
		tong += doDaiCanh[i];
	}
	return tong;
}


float DaGiac::dienTich(){
}

template <class T> bool DaGiac::operator > (T a){
	if(dienTich() > a.dienTich()) return true;
	else return false;
}


class TamGiac : public DaGiac{
	private:
		char KieuTamGiac[100];
	public:
		TamGiac();
		TamGiac(int, float[100], char[100]);
		~TamGiac();
		friend istream& operator >> (istream&,TamGiac&);
		friend ostream& operator << (ostream&,TamGiac);
		float dienTich();
};

TamGiac::TamGiac(){
	strcpy(this->KieuTamGiac,"");
}

TamGiac::TamGiac(int sC, float dDC[100], char KTG[100]) : DaGiac(sC,dDC){
	strcpy(this->KieuTamGiac,KTG);
}

TamGiac::~TamGiac(){
}

istream& operator >> (istream& cin,TamGiac& A){
	DaGiac *p = &A;
	cin >> *p;
	cout << "Nhap loai (Tam Giac hay Hinh Chu Nhat): "; fflush(stdin); gets(A.KieuTamGiac);
}

ostream& operator << (ostream& cin,TamGiac A){
	DaGiac *p = &A;
	cout << *p;
	cout << "Loai tam giac: " << A.KieuTamGiac << endl;
	cout << "Dien tich: " << A.dienTich() << endl;
}

float TamGiac::dienTich(){
	
	float a = doDaiCanh[0];
	float b = doDaiCanh[1];
	float c = doDaiCanh[2];
	float p = chuVi() / 2;
	float s = sqrt(p* (p - a)* (p - b)* (p - c));
	return s;
}

class HinhChuNhat : public DaGiac{
	private:
		char KieuHinhChuNhat[100];
	public:
		HinhChuNhat();
		HinhChuNhat(int, float[100], char[100]);
		~HinhChuNhat();
		friend istream& operator >> (istream&,HinhChuNhat&);
		friend ostream& operator << (ostream&,HinhChuNhat);
		float dienTich();
		char* getKieu();
};

HinhChuNhat::HinhChuNhat(){
	strcpy(this->KieuHinhChuNhat,"");
}

HinhChuNhat::HinhChuNhat(int sC, float dDC[100], char kHCN[100]) : DaGiac(sC, dDC){
	strcpy(this->KieuHinhChuNhat,"");
}

HinhChuNhat::~HinhChuNhat(){
}

istream& operator >> (istream& cin,HinhChuNhat& A) {
	DaGiac *p = &A;
	cin >> *p;
	cout << "Nhap kieu hinh chu nhat: "; fflush(stdin); gets(A.KieuHinhChuNhat);
}

ostream& operator << (ostream& cin,HinhChuNhat A){
	DaGiac *p = &A;
	cout << *p;
	cout << "Nhap loai (Tam Giac hay Hinh Chu Nhat): " << A.KieuHinhChuNhat << endl;
	cout << "Dien tich: " << A.dienTich() << endl;
}

float HinhChuNhat::dienTich(){
	int temp = doDaiCanh[0];
	int temp2 = doDaiCanh[0];
	for(int i=0;i<soCanh;i++){
		if(temp != doDaiCanh[i]){
			temp2 = doDaiCanh[i];
			break;
		}
	}
	return temp * temp2;
}

char* HinhChuNhat::getKieu(){
	return KieuHinhChuNhat;
}


template<class T> void nhap(T a[100], int n){
	for(int i=0;i<n;i++){
		cout << endl;
		cout << "Nhap thong tin hinh " << i+1 << endl;
		cin >> a[i];
	}
}

template<class T> void xuat(T a[100], int n){
	for(int i=0;i<n;i++){
		cout << endl;
		cout << "Thong tin hinh " << i+1 << endl;
		cout << a[i];
	}
}

void checkHinhChuNhat(HinhChuNhat b[100], int n){
	for(int i=0;i<n;i++){
		if(strcmp(b[i].getKieu() , "Hinh Chu Nhat" ) == 0 ) cout << b[i];
	}
}

template<class T> void sapXep(T a[100], int n){
	for(int i=0;i<n;i++){
		for(int j=n-1;j>i;j--){
			if(a[j].dienTich() > a[j-1].dienTich()){
				T temp = a[j];
				a[j] = a[j-1];
				a[j-1] = temp;
			}
		}
	}
}

int main(){
	int n;
	cout << "Nhap so tam giac: ";
	cin >> n;
	TamGiac a[100];
	cout << "--------------- NHAP -----------------------" << endl;
	nhap(a,n);
	cout << endl;
	cout << "--------------- XUAT -----------------------" << endl;
	xuat(a,n);
	cout << endl << endl;
	int m;
	cout << "Nhap so hinh chu nhat: ";
	cin >> m;
	HinhChuNhat b[100];
	cout << endl;
	cout << "---------------NHAP ---------------------------" << endl;
	nhap(b,m);
	cout << endl;
	cout << "--------------- XUAT -----------------------" << endl;
	xuat(b,m);
	sapXep(a,n);
	sapXep(b,m);
	cout << endl;
	cout << "--------------- SAP XEP TAM GIAC -----------------------" << endl;
	xuat(a,n);
	cout << endl;
	cout << "--------------- SAP XEP CHU NHAT -----------------------" << endl;
	xuat(b,m);
	cout << "--------------- MAX TAM GIAC -----------------------" << endl;
	cout << a[0];
	cout << endl;
	cout << "--------------- MAX CHU NHAT -----------------------" << endl;
	cout << b[0];
	return 0;
}
